/**
 * @fileoverview gRPC-Web generated client stub for questions
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
//  protoc-gen-grpc-web v1.5.0
//  protoc              v5.29.3
// source: questions.proto

/* eslint-disable */
// @ts-nocheck

import grpcWeb from 'grpc-web';
import { SearchRequest, SearchResponse } from './questions_pb.js';

const grpc = {};
grpc.web = grpcWeb;

const proto = {};
proto.questions = {};

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.questions.QuestionServiceClient = class {
  constructor(hostname, credentials, options) {
    if (!options) options = {};
    options.format = 'text';
    this.client_ = new grpc.web.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
  }

  searchQuestions(request, metadata, callback) {
    return this.client_.rpcCall(this.hostname_ +
        '/questions.QuestionService/SearchQuestions',
        request,
        metadata || {},
        methodDescriptor_QuestionService_SearchQuestions,
        callback);
  }

  searchQuestions(request, metadata) {
    return this.client_.unaryCall(this.hostname_ +
        '/questions.QuestionService/SearchQuestions',
        request,
        metadata || {},
        methodDescriptor_QuestionService_SearchQuestions);
  }
};

const methodDescriptor_QuestionService_SearchQuestions = new grpc.web.MethodDescriptor(
  '/questions.QuestionService/SearchQuestions',
  grpc.web.MethodType.UNARY,
  SearchRequest,
  SearchResponse,
  function(request) {
    return request.serializeBinary();
  },
  SearchResponse.deserializeBinary
);

export { proto };
